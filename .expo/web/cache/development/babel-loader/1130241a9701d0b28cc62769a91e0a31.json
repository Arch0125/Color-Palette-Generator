{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Gen_button from \"./components/Gen_button\";\nimport { useState } from 'react';\nimport TopBar from \"./screens/TopBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Clipboard from 'expo-clipboard';\nimport Color_box from \"./components/Color_box\";\n\nvar App = function App() {\n  var createAlert = function createAlert() {\n    Alert.alert(\"\", \"Color Hex-code is copied\");\n  };\n\n  var _useState = useState(\"#fffff\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      hex1 = _useState2[0],\n      setHex1 = _useState2[1];\n\n  var _useState3 = useState(\"#fffff\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hex2 = _useState4[0],\n      setHex2 = _useState4[1];\n\n  var _useState5 = useState(\"#fffff\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hex3 = _useState6[0],\n      setHex3 = _useState6[1];\n\n  var _useState7 = useState(\"#fffff\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hex4 = _useState8[0],\n      setHex4 = _useState8[1];\n\n  var randomHex = function randomHex() {\n    var randomColor1 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    var randomColor2 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    var randomColor3 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    var randomColor4 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    setHex1(randomColor1);\n    setHex2(randomColor2);\n    setHex3(randomColor3);\n    setHex4(randomColor4);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TopBar, null), React.createElement(View, {\n    style: styles.color_row\n  }, React.createElement(Color_box, {\n    hexcode: hex1,\n    onPress: function onPress() {\n      return Clipboard.setString;\n    }\n  }), React.createElement(Color_box, {\n    hexcode: hex2\n  })), React.createElement(View, {\n    style: styles.color_row\n  }, React.createElement(Color_box, {\n    hexcode: hex3\n  }), React.createElement(Color_box, {\n    hexcode: hex4\n  })), React.createElement(Gen_button, {\n    onPress: randomHex\n  }), React.createElement(Text, {\n    style: styles.subtitle\n  }, \"Tap on the color code to copy !\"));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: '#eeecf1',\n    alignItems: 'center',\n    justifyContent: \"space-between\"\n  },\n  button_container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  color_container: {\n    backgroundColor: \"white\",\n    width: 150,\n    height: 160,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 20\n  },\n  color_hex: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    paddingBottom: 5,\n    textTransform: \"uppercase\",\n    color: \"#536878\"\n  },\n  color_bg: {\n    width: 130,\n    height: 127,\n    borderRadius: 20\n  },\n  subtitle: {\n    marginTop: 5,\n    color: \"grey\"\n  },\n  color_row: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/archismandas/color_palette/App.js"],"names":["StatusBar","React","Gen_button","useState","TopBar","Clipboard","Color_box","App","createAlert","Alert","alert","hex1","setHex1","hex2","setHex2","hex3","setHex3","hex4","setHex4","randomHex","randomColor1","Math","floor","random","toString","randomColor2","randomColor3","randomColor4","styles","container","color_row","setString","subtitle","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","button_container","width","color_container","height","borderRadius","marginRight","color_hex","fontSize","fontWeight","paddingBottom","textTransform","color","color_bg","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { Alert, StyleSheet, Text, View } from 'react-native';\nimport Gen_button from './components/Gen_button';\nimport { useState } from 'react';\nimport TopBar from './screens/TopBar';\nimport { TouchableOpacity } from 'react-native';\nimport * as Clipboard from 'expo-clipboard';\nimport Color_box from './components/Color_box';\n\nconst App = () => {\n\n  const createAlert=()=>{\n    Alert.alert(\"\",\"Color Hex-code is copied\");\n  }\n  \n\n  const[hex1,setHex1]=useState(\"#fffff\");\n  const[hex2,setHex2]=useState(\"#fffff\");\n  const[hex3,setHex3]=useState(\"#fffff\");\n  const[hex4,setHex4]=useState(\"#fffff\");\n\n  const randomHex =()=>{\n    const randomColor1 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    const randomColor2 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    const randomColor3 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    const randomColor4 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\n    setHex1(randomColor1);\n    setHex2(randomColor2);\n    setHex3(randomColor3);\n    setHex4(randomColor4);\n  }\n  return (\n    <View style={styles.container}>\n      <TopBar/>\n      <View style={styles.color_row} >\n        \n        <Color_box hexcode={hex1} onPress={()=>Clipboard.setString} />\n        <Color_box hexcode={hex2}/>\n        \n      </View>\n\n      <View style={styles.color_row} >\n        <Color_box hexcode={hex3}/>\n        <Color_box hexcode={hex4}/>\n      </View>      \n      \n      <Gen_button onPress={randomHex} />\n      <Text style={styles.subtitle} >Tap on the color code to copy !</Text>\n      \n    </View>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    flexDirection:\"column\",\n    backgroundColor: '#eeecf1',\n    alignItems: 'center',\n    justifyContent:\"space-between\"\n    \n  },\n  button_container:{\n    \n    justifyContent:\"center\",\n    alignItems:\"center\",\n    width:\"100%\"\n\n},\n  color_container:{\n    backgroundColor:\"white\",\n    width:150,\n    height:160,\n    \n    alignItems:\"center\",\n    justifyContent:\"flex-end\",\n    borderRadius:20,\n    marginRight:20\n   \n    \n  },\n  color_hex:{\n    fontSize:16,\n    fontWeight:\"bold\",\n    paddingBottom:5,\n    textTransform:\"uppercase\",\n    color:\"#536878\"\n    \n  },\n  color_bg:{\n    width:130,\n    height:127,\n    borderRadius:20,\n    \n    \n\n  },\n  subtitle:{\n    marginTop:5,\n    color:\"grey\",\n  },\n  color_row:{\n    flex:1,\n    flexDirection:\"row\",\n    justifyContent:\"space-between\",\n    alignItems:\"center\",\n    \n  }\n});\n"]},"metadata":{},"sourceType":"module"}